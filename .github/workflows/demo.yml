name: Vercel - Staging

on:
  pull_request:
    branches: [ main ]

jobs:
  deloy:
    if: ${{ github.event_name != 'pull_request' || (github.event_name == 'pull_request' && !github.event.pull_request.draft) }}
    runs-on: ubuntu-latest
    timeout-minutes: 2

    steps:
    - name: Checkout PR
      uses: actions/checkout@v2

    - name: Use Node.js 12
      uses: actions/setup-node@v1
      with:
        node-version: 12
        registry-url: https://npm.pkg.github.com
        scope: blotoutio

    - name: Cache node_modules
      id: cache-modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-node12-${{ hashFiles('package-lock.json') }}

    - name: Install dependencies
      if: steps.cache-modules.outputs.cache-hit != 'true'
      run: npm ci
      env:
        NODE_AUTH_TOKEN: ${{secrets.TOKEN_REPO}}

    - name: Build
      run: npm run demo

    - name: Deploy to Staging
      if: github.event_name == 'pull_request'
      uses: amondnet/vercel-action@v20
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}
        working-directory: ./demo

    - name: Deploy to Production
      if: github.event_name == 'push'
      uses: amondnet/vercel-action@v20
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}
        vercel-args: '--prod'
        working-directory: ./demo
